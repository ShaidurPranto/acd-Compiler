.MODEL SMALL
.STACK 1000H
.DATA
    number DB "00000$"
.CODE
main PROC
    MOV AX, @DATA
    MOV DS, AX
    PUSH BP
    MOV BP, SP
    SUB SP, 2
    SUB SP, 2
    SUB SP, 2
    MOV AX, 7
    MOV [BP - 2], AX
    MOV AX, 3
    MOV [BP - 4], AX
    MOV AX, [BP - 2]
    PUSH AX
    MOV AX, [BP - 4]
    PUSH AX
    CALL foo
    MOV [BP - 6], AX
    MOV AX, [BP - 6]
    CALL print_output
    CALL new_line
    ADD SP, 6
    POP BP
    MOV AX,4CH
    INT 21H
main ENDP
foo PROC
    PUSH BP
    MOV BP, SP
    MOV BX, [BP + 4]
    MOV AX, [BP + 6]
    ADD AX, BX
    PUSH AX
L0:
    MOV BX, 5
    POP AX
	CMP AX, BX
	JLE L1
    JMP L2
L1:
    MOV AX, 7
    POP BP
    RET 4
    JMP L2
L2:
    MOV BX, 2
    MOV AX, [BP + 6]
    SUB AX, BX
    PUSH AX
    MOV BX, 1
    MOV AX, [BP + 4]
    SUB AX, BX
    PUSH AX
    CALL foo
    PUSH AX
    MOV BX, 1
    MOV AX, [BP + 6]
    SUB AX, BX
    PUSH AX
    MOV BX, 2
    MOV AX, [BP + 4]
    SUB AX, BX
    PUSH AX
    CALL foo
    PUSH AX
    POP BX
    MOV AX, 2
    IMUL BL
    PUSH AX
    POP BX
    POP AX
    ADD AX, BX
    POP BP
    RET 4
foo ENDP
new_line proc
    push ax
    push dx
    mov ah,2
    mov dl,0Dh
    int 21h
    mov ah,2
    mov dl,0Ah
    int 21h
    pop dx
    pop ax
    ret
new_line endp
print_output proc
    push ax
    push bx
    push cx
    push dx
    push si
    lea si,number
    mov bx,10
    add si,4
    cmp ax,0
    jnge negate
print:
    xor dx,dx
    div bx
    mov [si],dl
    add [si],'0'
    dec si
    cmp ax,0
    jne print
    inc si
    lea dx,si
    mov ah,9
    int 21h
    pop si
    pop dx
    pop cx
    pop bx
    pop ax
    ret
negate:
    push ax
    mov ah,2
    mov dl,'-'
    int 21h
    pop ax
    neg ax
    jmp print
print_output endp
END
