Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme i
Line# 1: Token <COMMA> Lexeme ,
Line# 1: Token <ID> Lexeme j
Line# 1: Token <SEMICOLON> Lexeme ;
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme main
Line# 2: Token <LPAREN> Lexeme (
Line# 2: Token <RPAREN> Lexeme )
Line# 2: Token <LCURL> Lexeme {
Line# 4: Token <INT> Lexeme int
Line# 4: Token <ID> Lexeme k
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme ll
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme m
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme n
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme o
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme p
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 6: Token <ID> Lexeme i
Line# 6: Token <ASSIGNOP> Lexeme =
Line# 6: Token <CONST_INT> Lexeme 1
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 7: Token <ID> Lexeme println
Line# 7: Token <LPAREN> Lexeme (
Line# 7: Token <ID> Lexeme i
Line# 7: Token <RPAREN> Lexeme )
Line# 7: Token <SEMICOLON> Lexeme ;
Line# 9: Token <ID> Lexeme j
Line# 9: Token <ASSIGNOP> Lexeme =
Line# 9: Token <CONST_INT> Lexeme 5
Line# 9: Token <ADDOP> Lexeme +
Line# 9: Token <CONST_INT> Lexeme 8
Line# 9: Token <SEMICOLON> Lexeme ;
Line# 10: Token <ID> Lexeme println
Line# 10: Token <LPAREN> Lexeme (
Line# 10: Token <ID> Lexeme j
Line# 10: Token <RPAREN> Lexeme )
Line# 10: Token <SEMICOLON> Lexeme ;
Line# 12: Token <ID> Lexeme k
Line# 12: Token <ASSIGNOP> Lexeme =
Line# 12: Token <ID> Lexeme i
Line# 12: Token <ADDOP> Lexeme +
Line# 12: Token <CONST_INT> Lexeme 2
Line# 12: Token <MULOP> Lexeme *
Line# 12: Token <ID> Lexeme j
Line# 12: Token <SEMICOLON> Lexeme ;
Line# 13: Token <ID> Lexeme println
Line# 13: Token <LPAREN> Lexeme (
Line# 13: Token <ID> Lexeme k
Line# 13: Token <RPAREN> Lexeme )
Line# 13: Token <SEMICOLON> Lexeme ;
Line# 15: Token <ID> Lexeme m
Line# 15: Token <ASSIGNOP> Lexeme =
Line# 15: Token <ID> Lexeme k
Line# 15: Token <MULOP> Lexeme %
Line# 15: Token <CONST_INT> Lexeme 9
Line# 15: Token <SEMICOLON> Lexeme ;
Line# 16: Token <ID> Lexeme println
Line# 16: Token <LPAREN> Lexeme (
Line# 16: Token <ID> Lexeme m
Line# 16: Token <RPAREN> Lexeme )
Line# 16: Token <SEMICOLON> Lexeme ;
Line# 18: Token <ID> Lexeme n
Line# 18: Token <ASSIGNOP> Lexeme =
Line# 18: Token <ID> Lexeme m
Line# 18: Token <ID> Lexeme ll
Line# 18: Token <SEMICOLON> Lexeme ;
Line# 19: Token <ID> Lexeme println
Line# 19: Token <LPAREN> Lexeme (
Line# 19: Token <ID> Lexeme n
Line# 19: Token <RPAREN> Lexeme )
Line# 19: Token <SEMICOLON> Lexeme ;
Line# 21: Token <ID> Lexeme o
Line# 21: Token <ASSIGNOP> Lexeme =
Line# 21: Token <ID> Lexeme i
Line# 21: Token <RELOP> Lexeme !=
Line# 21: Token <ID> Lexeme j
Line# 21: Token <SEMICOLON> Lexeme ;
Line# 22: Token <ID> Lexeme println
Line# 22: Token <LPAREN> Lexeme (
Line# 22: Token <ID> Lexeme o
Line# 22: Token <RPAREN> Lexeme )
Line# 22: Token <SEMICOLON> Lexeme ;
Line# 24: Token <ID> Lexeme p
Line# 24: Token <ASSIGNOP> Lexeme =
Line# 24: Token <ID> Lexeme n
Line# 24: Token <LOGICOP> Lexeme ||
Line# 24: Token <ID> Lexeme o
Line# 24: Token <SEMICOLON> Lexeme ;
Line# 25: Token <ID> Lexeme println
Line# 25: Token <LPAREN> Lexeme (
Line# 25: Token <ID> Lexeme p
Line# 25: Token <RPAREN> Lexeme )
Line# 25: Token <SEMICOLON> Lexeme ;
Line# 27: Token <ID> Lexeme p
Line# 27: Token <ASSIGNOP> Lexeme =
Line# 27: Token <ID> Lexeme n
Line# 27: Token <ID> Lexeme o
Line# 27: Token <SEMICOLON> Lexeme ;
Line# 28: Token <ID> Lexeme println
Line# 28: Token <LPAREN> Lexeme (
Line# 28: Token <ID> Lexeme p
Line# 28: Token <RPAREN> Lexeme )
Line# 28: Token <SEMICOLON> Lexeme ;
Line# 30: Token <ID> Lexeme p
Line# 30: Token <INCOP> Lexeme ++
Line# 30: Token <SEMICOLON> Lexeme ;
Line# 31: Token <ID> Lexeme println
Line# 31: Token <LPAREN> Lexeme (
Line# 31: Token <ID> Lexeme p
Line# 31: Token <RPAREN> Lexeme )
Line# 31: Token <SEMICOLON> Lexeme ;
Line# 33: Token <ID> Lexeme k
Line# 33: Token <ASSIGNOP> Lexeme =
Line# 33: Token <ADDOP> Lexeme -
Line# 33: Token <ID> Lexeme p
Line# 33: Token <SEMICOLON> Lexeme ;
Line# 34: Token <ID> Lexeme println
Line# 34: Token <LPAREN> Lexeme (
Line# 34: Token <ID> Lexeme k
Line# 34: Token <RPAREN> Lexeme )
Line# 34: Token <SEMICOLON> Lexeme ;
Line# 36: Token <RETURN> Lexeme return
Line# 36: Token <CONST_INT> Lexeme 0
Line# 36: Token <SEMICOLON> Lexeme ;
Line# 37: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme i
Line# 1: Token <COMMA> Lexeme ,
Line# 1: Token <ID> Lexeme j
Line# 1: Token <SEMICOLON> Lexeme ;
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme main
Line# 2: Token <LPAREN> Lexeme (
Line# 2: Token <RPAREN> Lexeme )
Line# 2: Token <LCURL> Lexeme {
Line# 4: Token <INT> Lexeme int
Line# 4: Token <ID> Lexeme k
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme ll
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme m
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme n
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme o
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme p
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 6: Token <ID> Lexeme i
Line# 6: Token <ASSIGNOP> Lexeme =
Line# 6: Token <CONST_INT> Lexeme 1
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 7: Token <ID> Lexeme println
Line# 7: Token <LPAREN> Lexeme (
Line# 7: Token <ID> Lexeme i
Line# 7: Token <RPAREN> Lexeme )
Line# 7: Token <SEMICOLON> Lexeme ;
Line# 9: Token <ID> Lexeme j
Line# 9: Token <ASSIGNOP> Lexeme =
Line# 9: Token <CONST_INT> Lexeme 5
Line# 9: Token <ADDOP> Lexeme +
Line# 9: Token <CONST_INT> Lexeme 8
Line# 9: Token <SEMICOLON> Lexeme ;
Line# 10: Token <ID> Lexeme println
Line# 10: Token <LPAREN> Lexeme (
Line# 10: Token <ID> Lexeme j
Line# 10: Token <RPAREN> Lexeme )
Line# 10: Token <SEMICOLON> Lexeme ;
Line# 12: Token <ID> Lexeme k
Line# 12: Token <ASSIGNOP> Lexeme =
Line# 12: Token <ID> Lexeme i
Line# 12: Token <ADDOP> Lexeme +
Line# 12: Token <CONST_INT> Lexeme 2
Line# 12: Token <MULOP> Lexeme *
Line# 12: Token <ID> Lexeme j
Line# 12: Token <SEMICOLON> Lexeme ;
Line# 13: Token <ID> Lexeme println
Line# 13: Token <LPAREN> Lexeme (
Line# 13: Token <ID> Lexeme k
Line# 13: Token <RPAREN> Lexeme )
Line# 13: Token <SEMICOLON> Lexeme ;
Line# 15: Token <ID> Lexeme m
Line# 15: Token <ASSIGNOP> Lexeme =
Line# 15: Token <ID> Lexeme k
Line# 15: Token <MULOP> Lexeme %
Line# 15: Token <CONST_INT> Lexeme 9
Line# 15: Token <SEMICOLON> Lexeme ;
Line# 16: Token <ID> Lexeme println
Line# 16: Token <LPAREN> Lexeme (
Line# 16: Token <ID> Lexeme m
Line# 16: Token <RPAREN> Lexeme )
Line# 16: Token <SEMICOLON> Lexeme ;
Line# 18: Token <ID> Lexeme n
Line# 18: Token <ASSIGNOP> Lexeme =
Line# 18: Token <ID> Lexeme m
Line# 18: Token <ID> Lexeme ll
Line# 18: Token <SEMICOLON> Lexeme ;
Line# 19: Token <ID> Lexeme println
Line# 19: Token <LPAREN> Lexeme (
Line# 19: Token <ID> Lexeme n
Line# 19: Token <RPAREN> Lexeme )
Line# 19: Token <SEMICOLON> Lexeme ;
Line# 21: Token <ID> Lexeme o
Line# 21: Token <ASSIGNOP> Lexeme =
Line# 21: Token <ID> Lexeme i
Line# 21: Token <RELOP> Lexeme !=
Line# 21: Token <ID> Lexeme j
Line# 21: Token <SEMICOLON> Lexeme ;
Line# 22: Token <ID> Lexeme println
Line# 22: Token <LPAREN> Lexeme (
Line# 22: Token <ID> Lexeme o
Line# 22: Token <RPAREN> Lexeme )
Line# 22: Token <SEMICOLON> Lexeme ;
Line# 24: Token <ID> Lexeme p
Line# 24: Token <ASSIGNOP> Lexeme =
Line# 24: Token <ID> Lexeme n
Line# 24: Token <LOGICOP> Lexeme ||
Line# 24: Token <ID> Lexeme o
Line# 24: Token <SEMICOLON> Lexeme ;
Line# 25: Token <ID> Lexeme println
Line# 25: Token <LPAREN> Lexeme (
Line# 25: Token <ID> Lexeme p
Line# 25: Token <RPAREN> Lexeme )
Line# 25: Token <SEMICOLON> Lexeme ;
Line# 27: Token <ID> Lexeme p
Line# 27: Token <ASSIGNOP> Lexeme =
Line# 27: Token <ID> Lexeme n
Line# 27: Token <ID> Lexeme o
Line# 27: Token <SEMICOLON> Lexeme ;
Line# 28: Token <ID> Lexeme println
Line# 28: Token <LPAREN> Lexeme (
Line# 28: Token <ID> Lexeme p
Line# 28: Token <RPAREN> Lexeme )
Line# 28: Token <SEMICOLON> Lexeme ;
Line# 30: Token <ID> Lexeme p
Line# 30: Token <INCOP> Lexeme ++
Line# 30: Token <SEMICOLON> Lexeme ;
Line# 31: Token <ID> Lexeme println
Line# 31: Token <LPAREN> Lexeme (
Line# 31: Token <ID> Lexeme p
Line# 31: Token <RPAREN> Lexeme )
Line# 31: Token <SEMICOLON> Lexeme ;
Line# 33: Token <ID> Lexeme k
Line# 33: Token <ASSIGNOP> Lexeme =
Line# 33: Token <ADDOP> Lexeme -
Line# 33: Token <ID> Lexeme p
Line# 33: Token <SEMICOLON> Lexeme ;
Line# 34: Token <ID> Lexeme println
Line# 34: Token <LPAREN> Lexeme (
Line# 34: Token <ID> Lexeme k
Line# 34: Token <RPAREN> Lexeme )
Line# 34: Token <SEMICOLON> Lexeme ;
Line# 36: Token <RETURN> Lexeme return
Line# 36: Token <CONST_INT> Lexeme 0
Line# 36: Token <SEMICOLON> Lexeme ;
Line# 37: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme i
Line# 1: Token <COMMA> Lexeme ,
Line# 1: Token <ID> Lexeme j
Line# 1: Token <SEMICOLON> Lexeme ;
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme main
Line# 2: Token <LPAREN> Lexeme (
Line# 2: Token <RPAREN> Lexeme )
Line# 2: Token <LCURL> Lexeme {
Line# 4: Token <INT> Lexeme int
Line# 4: Token <ID> Lexeme k
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme ll
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme m
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme n
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme o
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme p
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 6: Token <ID> Lexeme i
Line# 6: Token <ASSIGNOP> Lexeme =
Line# 6: Token <CONST_INT> Lexeme 1
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 7: Token <ID> Lexeme println
Line# 7: Token <LPAREN> Lexeme (
Line# 7: Token <ID> Lexeme i
Line# 7: Token <RPAREN> Lexeme )
Line# 7: Token <SEMICOLON> Lexeme ;
Line# 9: Token <ID> Lexeme j
Line# 9: Token <ASSIGNOP> Lexeme =
Line# 9: Token <CONST_INT> Lexeme 5
Line# 9: Token <ADDOP> Lexeme +
Line# 9: Token <CONST_INT> Lexeme 8
Line# 9: Token <SEMICOLON> Lexeme ;
Line# 10: Token <ID> Lexeme println
Line# 10: Token <LPAREN> Lexeme (
Line# 10: Token <ID> Lexeme j
Line# 10: Token <RPAREN> Lexeme )
Line# 10: Token <SEMICOLON> Lexeme ;
Line# 12: Token <ID> Lexeme k
Line# 12: Token <ASSIGNOP> Lexeme =
Line# 12: Token <ID> Lexeme i
Line# 12: Token <ADDOP> Lexeme +
Line# 12: Token <CONST_INT> Lexeme 2
Line# 12: Token <MULOP> Lexeme *
Line# 12: Token <ID> Lexeme j
Line# 12: Token <SEMICOLON> Lexeme ;
Line# 13: Token <ID> Lexeme println
Line# 13: Token <LPAREN> Lexeme (
Line# 13: Token <ID> Lexeme k
Line# 13: Token <RPAREN> Lexeme )
Line# 13: Token <SEMICOLON> Lexeme ;
Line# 15: Token <ID> Lexeme m
Line# 15: Token <ASSIGNOP> Lexeme =
Line# 15: Token <ID> Lexeme k
Line# 15: Token <MULOP> Lexeme %
Line# 15: Token <CONST_INT> Lexeme 9
Line# 15: Token <SEMICOLON> Lexeme ;
Line# 16: Token <ID> Lexeme println
Line# 16: Token <LPAREN> Lexeme (
Line# 16: Token <ID> Lexeme m
Line# 16: Token <RPAREN> Lexeme )
Line# 16: Token <SEMICOLON> Lexeme ;
Line# 18: Token <ID> Lexeme n
Line# 18: Token <ASSIGNOP> Lexeme =
Line# 18: Token <ID> Lexeme m
Line# 18: Token <ID> Lexeme ll
Line# 18: Token <SEMICOLON> Lexeme ;
Line# 19: Token <ID> Lexeme println
Line# 19: Token <LPAREN> Lexeme (
Line# 19: Token <ID> Lexeme n
Line# 19: Token <RPAREN> Lexeme )
Line# 19: Token <SEMICOLON> Lexeme ;
Line# 21: Token <ID> Lexeme o
Line# 21: Token <ASSIGNOP> Lexeme =
Line# 21: Token <ID> Lexeme i
Line# 21: Token <RELOP> Lexeme !=
Line# 21: Token <ID> Lexeme j
Line# 21: Token <SEMICOLON> Lexeme ;
Line# 22: Token <ID> Lexeme println
Line# 22: Token <LPAREN> Lexeme (
Line# 22: Token <ID> Lexeme o
Line# 22: Token <RPAREN> Lexeme )
Line# 22: Token <SEMICOLON> Lexeme ;
Line# 24: Token <ID> Lexeme p
Line# 24: Token <ASSIGNOP> Lexeme =
Line# 24: Token <ID> Lexeme n
Line# 24: Token <LOGICOP> Lexeme ||
Line# 24: Token <ID> Lexeme o
Line# 24: Token <SEMICOLON> Lexeme ;
Line# 25: Token <ID> Lexeme println
Line# 25: Token <LPAREN> Lexeme (
Line# 25: Token <ID> Lexeme p
Line# 25: Token <RPAREN> Lexeme )
Line# 25: Token <SEMICOLON> Lexeme ;
Line# 27: Token <ID> Lexeme p
Line# 27: Token <ASSIGNOP> Lexeme =
Line# 27: Token <ID> Lexeme n
Line# 27: Token <ID> Lexeme o
Line# 27: Token <SEMICOLON> Lexeme ;
Line# 28: Token <ID> Lexeme println
Line# 28: Token <LPAREN> Lexeme (
Line# 28: Token <ID> Lexeme p
Line# 28: Token <RPAREN> Lexeme )
Line# 28: Token <SEMICOLON> Lexeme ;
Line# 30: Token <ID> Lexeme p
Line# 30: Token <INCOP> Lexeme ++
Line# 30: Token <SEMICOLON> Lexeme ;
Line# 31: Token <ID> Lexeme println
Line# 31: Token <LPAREN> Lexeme (
Line# 31: Token <ID> Lexeme p
Line# 31: Token <RPAREN> Lexeme )
Line# 31: Token <SEMICOLON> Lexeme ;
Line# 33: Token <ID> Lexeme k
Line# 33: Token <ASSIGNOP> Lexeme =
Line# 33: Token <ADDOP> Lexeme -
Line# 33: Token <ID> Lexeme p
Line# 33: Token <SEMICOLON> Lexeme ;
Line# 34: Token <ID> Lexeme println
Line# 34: Token <LPAREN> Lexeme (
Line# 34: Token <ID> Lexeme k
Line# 34: Token <RPAREN> Lexeme )
Line# 34: Token <SEMICOLON> Lexeme ;
Line# 36: Token <RETURN> Lexeme return
Line# 36: Token <CONST_INT> Lexeme 0
Line# 36: Token <SEMICOLON> Lexeme ;
Line# 37: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme i
Line# 1: Token <COMMA> Lexeme ,
Line# 1: Token <ID> Lexeme j
Line# 1: Token <SEMICOLON> Lexeme ;
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme main
Line# 2: Token <LPAREN> Lexeme (
Line# 2: Token <RPAREN> Lexeme )
Line# 2: Token <LCURL> Lexeme {
Line# 4: Token <INT> Lexeme int
Line# 4: Token <ID> Lexeme k
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme ll
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme m
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme n
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme o
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme p
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 6: Token <ID> Lexeme i
Line# 6: Token <ASSIGNOP> Lexeme =
Line# 6: Token <CONST_INT> Lexeme 1
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 7: Token <ID> Lexeme println
Line# 7: Token <LPAREN> Lexeme (
Line# 7: Token <ID> Lexeme i
Line# 7: Token <RPAREN> Lexeme )
Line# 7: Token <SEMICOLON> Lexeme ;
Line# 9: Token <ID> Lexeme j
Line# 9: Token <ASSIGNOP> Lexeme =
Line# 9: Token <CONST_INT> Lexeme 5
Line# 9: Token <ADDOP> Lexeme +
Line# 9: Token <CONST_INT> Lexeme 8
Line# 9: Token <SEMICOLON> Lexeme ;
Line# 10: Token <ID> Lexeme println
Line# 10: Token <LPAREN> Lexeme (
Line# 10: Token <ID> Lexeme j
Line# 10: Token <RPAREN> Lexeme )
Line# 10: Token <SEMICOLON> Lexeme ;
Line# 12: Token <ID> Lexeme k
Line# 12: Token <ASSIGNOP> Lexeme =
Line# 12: Token <ID> Lexeme i
Line# 12: Token <ADDOP> Lexeme +
Line# 12: Token <CONST_INT> Lexeme 2
Line# 12: Token <MULOP> Lexeme *
Line# 12: Token <ID> Lexeme j
Line# 12: Token <SEMICOLON> Lexeme ;
Line# 13: Token <ID> Lexeme println
Line# 13: Token <LPAREN> Lexeme (
Line# 13: Token <ID> Lexeme k
Line# 13: Token <RPAREN> Lexeme )
Line# 13: Token <SEMICOLON> Lexeme ;
Line# 15: Token <ID> Lexeme m
Line# 15: Token <ASSIGNOP> Lexeme =
Line# 15: Token <ID> Lexeme k
Line# 15: Token <MULOP> Lexeme %
Line# 15: Token <CONST_INT> Lexeme 9
Line# 15: Token <SEMICOLON> Lexeme ;
Line# 16: Token <ID> Lexeme println
Line# 16: Token <LPAREN> Lexeme (
Line# 16: Token <ID> Lexeme m
Line# 16: Token <RPAREN> Lexeme )
Line# 16: Token <SEMICOLON> Lexeme ;
Line# 18: Token <ID> Lexeme n
Line# 18: Token <ASSIGNOP> Lexeme =
Line# 18: Token <ID> Lexeme m
Line# 18: Token <ID> Lexeme ll
Line# 18: Token <SEMICOLON> Lexeme ;
Line# 19: Token <ID> Lexeme println
Line# 19: Token <LPAREN> Lexeme (
Line# 19: Token <ID> Lexeme n
Line# 19: Token <RPAREN> Lexeme )
Line# 19: Token <SEMICOLON> Lexeme ;
Line# 21: Token <ID> Lexeme o
Line# 21: Token <ASSIGNOP> Lexeme =
Line# 21: Token <ID> Lexeme i
Line# 21: Token <RELOP> Lexeme !=
Line# 21: Token <ID> Lexeme j
Line# 21: Token <SEMICOLON> Lexeme ;
Line# 22: Token <ID> Lexeme println
Line# 22: Token <LPAREN> Lexeme (
Line# 22: Token <ID> Lexeme o
Line# 22: Token <RPAREN> Lexeme )
Line# 22: Token <SEMICOLON> Lexeme ;
Line# 24: Token <ID> Lexeme p
Line# 24: Token <ASSIGNOP> Lexeme =
Line# 24: Token <ID> Lexeme n
Line# 24: Token <LOGICOP> Lexeme ||
Line# 24: Token <ID> Lexeme o
Line# 24: Token <SEMICOLON> Lexeme ;
Line# 25: Token <ID> Lexeme println
Line# 25: Token <LPAREN> Lexeme (
Line# 25: Token <ID> Lexeme p
Line# 25: Token <RPAREN> Lexeme )
Line# 25: Token <SEMICOLON> Lexeme ;
Line# 27: Token <ID> Lexeme p
Line# 27: Token <ASSIGNOP> Lexeme =
Line# 27: Token <ID> Lexeme n
Line# 27: Token <ID> Lexeme o
Line# 27: Token <SEMICOLON> Lexeme ;
Line# 28: Token <ID> Lexeme println
Line# 28: Token <LPAREN> Lexeme (
Line# 28: Token <ID> Lexeme p
Line# 28: Token <RPAREN> Lexeme )
Line# 28: Token <SEMICOLON> Lexeme ;
Line# 30: Token <ID> Lexeme p
Line# 30: Token <INCOP> Lexeme ++
Line# 30: Token <SEMICOLON> Lexeme ;
Line# 31: Token <ID> Lexeme println
Line# 31: Token <LPAREN> Lexeme (
Line# 31: Token <ID> Lexeme p
Line# 31: Token <RPAREN> Lexeme )
Line# 31: Token <SEMICOLON> Lexeme ;
Line# 33: Token <ID> Lexeme k
Line# 33: Token <ASSIGNOP> Lexeme =
Line# 33: Token <ADDOP> Lexeme -
Line# 33: Token <ID> Lexeme p
Line# 33: Token <SEMICOLON> Lexeme ;
Line# 34: Token <ID> Lexeme println
Line# 34: Token <LPAREN> Lexeme (
Line# 34: Token <ID> Lexeme k
Line# 34: Token <RPAREN> Lexeme )
Line# 34: Token <SEMICOLON> Lexeme ;
Line# 36: Token <RETURN> Lexeme return
Line# 36: Token <CONST_INT> Lexeme 0
Line# 36: Token <SEMICOLON> Lexeme ;
Line# 37: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 6: Token <RETURN> Lexeme return
Line# 6: Token <CONST_INT> Lexeme 0
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 6: Token <RETURN> Lexeme return
Line# 6: Token <CONST_INT> Lexeme 0
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 6: Token <RETURN> Lexeme return
Line# 6: Token <CONST_INT> Lexeme 0
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 6: Token <RETURN> Lexeme return
Line# 6: Token <CONST_INT> Lexeme 0
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 6: Token <RETURN> Lexeme return
Line# 6: Token <CONST_INT> Lexeme 0
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 6: Token <RETURN> Lexeme return
Line# 6: Token <CONST_INT> Lexeme 0
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 6: Token <RETURN> Lexeme return
Line# 6: Token <CONST_INT> Lexeme 0
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 6: Token <RETURN> Lexeme return
Line# 6: Token <CONST_INT> Lexeme 0
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 6: Token <RETURN> Lexeme return
Line# 6: Token <CONST_INT> Lexeme 0
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 6: Token <RETURN> Lexeme return
Line# 6: Token <CONST_INT> Lexeme 0
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme k
Line# 1: Token <LTHIRD> Lexeme [
Line# 1: Token <CONST_INT> Lexeme 10
Line# 1: Token <RTHIRD> Lexeme ]
Line# 1: Token <SEMICOLON> Lexeme ;
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme main
Line# 2: Token <LPAREN> Lexeme (
Line# 2: Token <RPAREN> Lexeme )
Line# 2: Token <LCURL> Lexeme {
Line# 3: Token <ID> Lexeme k
Line# 3: Token <LTHIRD> Lexeme [
Line# 3: Token <CONST_INT> Lexeme 5
Line# 3: Token <RTHIRD> Lexeme ]
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 5
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <INT> Lexeme int
Line# 4: Token <ID> Lexeme i
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme j
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 5: Token <ID> Lexeme i
Line# 5: Token <ASSIGNOP> Lexeme =
Line# 5: Token <CONST_INT> Lexeme 2
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 6: Token <ID> Lexeme j
Line# 6: Token <ASSIGNOP> Lexeme =
Line# 6: Token <CONST_INT> Lexeme 9
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 9: Token <RETURN> Lexeme return
Line# 9: Token <CONST_INT> Lexeme 0
Line# 9: Token <SEMICOLON> Lexeme ;
Line# 10: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme k
Line# 1: Token <LTHIRD> Lexeme [
Line# 1: Token <CONST_INT> Lexeme 10
Line# 1: Token <RTHIRD> Lexeme ]
Line# 1: Token <SEMICOLON> Lexeme ;
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme main
Line# 2: Token <LPAREN> Lexeme (
Line# 2: Token <RPAREN> Lexeme )
Line# 2: Token <LCURL> Lexeme {
Line# 3: Token <ID> Lexeme k
Line# 3: Token <LTHIRD> Lexeme [
Line# 3: Token <CONST_INT> Lexeme 5
Line# 3: Token <RTHIRD> Lexeme ]
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 5
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <INT> Lexeme int
Line# 4: Token <ID> Lexeme i
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme j
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 5: Token <ID> Lexeme i
Line# 5: Token <ASSIGNOP> Lexeme =
Line# 5: Token <CONST_INT> Lexeme 2
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 6: Token <ID> Lexeme j
Line# 6: Token <ASSIGNOP> Lexeme =
Line# 6: Token <CONST_INT> Lexeme 9
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 9: Token <RETURN> Lexeme return
Line# 9: Token <CONST_INT> Lexeme 0
Line# 9: Token <SEMICOLON> Lexeme ;
Line# 10: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme k
Line# 1: Token <LTHIRD> Lexeme [
Line# 1: Token <CONST_INT> Lexeme 10
Line# 1: Token <RTHIRD> Lexeme ]
Line# 1: Token <SEMICOLON> Lexeme ;
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme main
Line# 2: Token <LPAREN> Lexeme (
Line# 2: Token <RPAREN> Lexeme )
Line# 2: Token <LCURL> Lexeme {
Line# 3: Token <ID> Lexeme k
Line# 3: Token <LTHIRD> Lexeme [
Line# 3: Token <CONST_INT> Lexeme 5
Line# 3: Token <RTHIRD> Lexeme ]
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 5
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <INT> Lexeme int
Line# 4: Token <ID> Lexeme i
Line# 4: Token <COMMA> Lexeme ,
Line# 4: Token <ID> Lexeme j
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 5: Token <ID> Lexeme i
Line# 5: Token <ASSIGNOP> Lexeme =
Line# 5: Token <CONST_INT> Lexeme 2
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 6: Token <ID> Lexeme j
Line# 6: Token <ASSIGNOP> Lexeme =
Line# 6: Token <CONST_INT> Lexeme 9
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 9: Token <RETURN> Lexeme return
Line# 9: Token <CONST_INT> Lexeme 0
Line# 9: Token <SEMICOLON> Lexeme ;
Line# 10: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RETURN> Lexeme return
Line# 7: Token <CONST_INT> Lexeme 0
Line# 7: Token <SEMICOLON> Lexeme ;
Line# 8: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RETURN> Lexeme return
Line# 7: Token <CONST_INT> Lexeme 0
Line# 7: Token <SEMICOLON> Lexeme ;
Line# 8: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RETURN> Lexeme return
Line# 7: Token <CONST_INT> Lexeme 0
Line# 7: Token <SEMICOLON> Lexeme ;
Line# 8: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RETURN> Lexeme return
Line# 7: Token <CONST_INT> Lexeme 0
Line# 7: Token <SEMICOLON> Lexeme ;
Line# 8: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RETURN> Lexeme return
Line# 7: Token <CONST_INT> Lexeme 0
Line# 7: Token <SEMICOLON> Lexeme ;
Line# 8: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RETURN> Lexeme return
Line# 7: Token <CONST_INT> Lexeme 0
Line# 7: Token <SEMICOLON> Lexeme ;
Line# 8: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RETURN> Lexeme return
Line# 7: Token <CONST_INT> Lexeme 0
Line# 7: Token <SEMICOLON> Lexeme ;
Line# 8: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RETURN> Lexeme return
Line# 7: Token <CONST_INT> Lexeme 0
Line# 7: Token <SEMICOLON> Lexeme ;
Line# 8: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RETURN> Lexeme return
Line# 7: Token <CONST_INT> Lexeme 0
Line# 7: Token <SEMICOLON> Lexeme ;
Line# 8: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 7: Token <RETURN> Lexeme return
Line# 7: Token <CONST_INT> Lexeme 0
Line# 7: Token <SEMICOLON> Lexeme ;
Line# 8: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 5: Token <ID> Lexeme println
Line# 5: Token <LPAREN> Lexeme (
Line# 5: Token <ID> Lexeme i
Line# 5: Token <RPAREN> Lexeme )
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 8: Token <RETURN> Lexeme return
Line# 8: Token <CONST_INT> Lexeme 0
Line# 8: Token <SEMICOLON> Lexeme ;
Line# 9: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 5: Token <ID> Lexeme println
Line# 5: Token <LPAREN> Lexeme (
Line# 5: Token <ID> Lexeme i
Line# 5: Token <RPAREN> Lexeme )
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 8: Token <RETURN> Lexeme return
Line# 8: Token <CONST_INT> Lexeme 0
Line# 8: Token <SEMICOLON> Lexeme ;
Line# 9: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 5: Token <ID> Lexeme println
Line# 5: Token <LPAREN> Lexeme (
Line# 5: Token <ID> Lexeme i
Line# 5: Token <RPAREN> Lexeme )
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 8: Token <RETURN> Lexeme return
Line# 8: Token <CONST_INT> Lexeme 0
Line# 8: Token <SEMICOLON> Lexeme ;
Line# 9: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 5: Token <ID> Lexeme println
Line# 5: Token <LPAREN> Lexeme (
Line# 5: Token <ID> Lexeme i
Line# 5: Token <RPAREN> Lexeme )
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 8: Token <RETURN> Lexeme return
Line# 8: Token <CONST_INT> Lexeme 0
Line# 8: Token <SEMICOLON> Lexeme ;
Line# 9: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 5: Token <ID> Lexeme println
Line# 5: Token <LPAREN> Lexeme (
Line# 5: Token <ID> Lexeme i
Line# 5: Token <RPAREN> Lexeme )
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 8: Token <RETURN> Lexeme return
Line# 8: Token <CONST_INT> Lexeme 0
Line# 8: Token <SEMICOLON> Lexeme ;
Line# 9: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 5: Token <PRINTLN> Lexeme println
Line# 5: Token <LPAREN> Lexeme (
Line# 5: Token <ID> Lexeme i
Line# 5: Token <RPAREN> Lexeme )
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 8: Token <RETURN> Lexeme return
Line# 8: Token <CONST_INT> Lexeme 0
Line# 8: Token <SEMICOLON> Lexeme ;
Line# 9: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 5: Token <PRINTLN> Lexeme println
Line# 5: Token <LPAREN> Lexeme (
Line# 5: Token <ID> Lexeme i
Line# 5: Token <RPAREN> Lexeme )
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 8: Token <RETURN> Lexeme return
Line# 8: Token <CONST_INT> Lexeme 0
Line# 8: Token <SEMICOLON> Lexeme ;
Line# 9: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 5: Token <PRINTLN> Lexeme println
Line# 5: Token <LPAREN> Lexeme (
Line# 5: Token <ID> Lexeme i
Line# 5: Token <RPAREN> Lexeme )
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 8: Token <RETURN> Lexeme return
Line# 8: Token <CONST_INT> Lexeme 0
Line# 8: Token <SEMICOLON> Lexeme ;
Line# 9: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 5: Token <PRINTLN> Lexeme println
Line# 5: Token <LPAREN> Lexeme (
Line# 5: Token <ID> Lexeme i
Line# 5: Token <RPAREN> Lexeme )
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 8: Token <RETURN> Lexeme return
Line# 8: Token <CONST_INT> Lexeme 0
Line# 8: Token <SEMICOLON> Lexeme ;
Line# 9: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 5: Token <PRINTLN> Lexeme println
Line# 5: Token <LPAREN> Lexeme (
Line# 5: Token <ID> Lexeme i
Line# 5: Token <RPAREN> Lexeme )
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 8: Token <RETURN> Lexeme return
Line# 8: Token <CONST_INT> Lexeme 0
Line# 8: Token <SEMICOLON> Lexeme ;
Line# 9: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme main
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme i
Line# 2: Token <COMMA> Lexeme ,
Line# 2: Token <ID> Lexeme j
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <ID> Lexeme i
Line# 3: Token <ASSIGNOP> Lexeme =
Line# 3: Token <CONST_INT> Lexeme 2
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme j
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 9
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 5: Token <PRINTLN> Lexeme println
Line# 5: Token <LPAREN> Lexeme (
Line# 5: Token <ID> Lexeme i
Line# 5: Token <RPAREN> Lexeme )
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 6: Token <PRINTLN> Lexeme println
Line# 6: Token <LPAREN> Lexeme (
Line# 6: Token <ID> Lexeme j
Line# 6: Token <RPAREN> Lexeme )
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 9: Token <RETURN> Lexeme return
Line# 9: Token <CONST_INT> Lexeme 0
Line# 9: Token <SEMICOLON> Lexeme ;
Line# 10: Token <RCURL> Lexeme }
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme k
Line# 1: Token <SEMICOLON> Lexeme ;
Line# 2: Token <INT> Lexeme int
Line# 2: Token <ID> Lexeme main
Line# 2: Token <LPAREN> Lexeme (
Line# 2: Token <RPAREN> Lexeme )
Line# 2: Token <LCURL> Lexeme {
Line# 3: Token <INT> Lexeme int
Line# 3: Token <ID> Lexeme i
Line# 3: Token <COMMA> Lexeme ,
Line# 3: Token <ID> Lexeme j
Line# 3: Token <SEMICOLON> Lexeme ;
Line# 4: Token <ID> Lexeme i
Line# 4: Token <ASSIGNOP> Lexeme =
Line# 4: Token <CONST_INT> Lexeme 2
Line# 4: Token <SEMICOLON> Lexeme ;
Line# 5: Token <ID> Lexeme j
Line# 5: Token <ASSIGNOP> Lexeme =
Line# 5: Token <CONST_INT> Lexeme 9
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 6: Token <ID> Lexeme k
Line# 6: Token <ASSIGNOP> Lexeme =
Line# 6: Token <CONST_INT> Lexeme 14
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 7: Token <PRINTLN> Lexeme println
Line# 7: Token <LPAREN> Lexeme (
Line# 7: Token <ID> Lexeme i
Line# 7: Token <RPAREN> Lexeme )
Line# 7: Token <SEMICOLON> Lexeme ;
Line# 8: Token <PRINTLN> Lexeme println
Line# 8: Token <LPAREN> Lexeme (
Line# 8: Token <ID> Lexeme j
Line# 8: Token <RPAREN> Lexeme )
Line# 8: Token <SEMICOLON> Lexeme ;
Line# 9: Token <PRINTLN> Lexeme println
Line# 9: Token <LPAREN> Lexeme (
Line# 9: Token <ID> Lexeme k
Line# 9: Token <RPAREN> Lexeme )
Line# 9: Token <SEMICOLON> Lexeme ;
Line# 11: Token <RETURN> Lexeme return
Line# 11: Token <CONST_INT> Lexeme 0
Line# 11: Token <SEMICOLON> Lexeme ;
Line# 12: Token <RCURL> Lexeme }
